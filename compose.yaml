services:
  admin:
    image: "agent-sim-admin:latest"
    container_name: "admin"
    build:
      context: ./backend/admin/
    depends_on:
      rabbitmq:
        condition: service_healthy

  user:
    image: "agent-sim-user:latest"
    container_name: "user"
    build:
      context: ./backend/user/
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 8081:8080

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - 8080:15672
      - 5672:5672
    container_name: "rabbit-server"
    hostname: "localhost"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  
  # frontend:
  #   image: "agent-sim-frontend:latest"
  #   ports:
  #     - 3000:3000
  #   container_name: "frontend"
  #   build:
  #     context: ./frontend/

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    hostname: localhost
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: admin
      POSTGRES_DB: company_sim
    volumes:
      - pgdata:/var/lib/postgresql/data 
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    restart: unless-stopped

  dev_agent_bob:
    image: "agent-sim-dev:latest"
    container_name: "bob"
    build:
      context: ./backend/dev-agent/
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      NAME: bob
      SKILL: 1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
  
  dev_agent_alice:
    image: "agent-sim-dev:latest"
    container_name: "alice"
    build:
      context: ./backend/dev-agent/
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      NAME: alice
      SKILL: 1
      OPENAI_API_KEY: ${OPENAI_API_KEY}

volumes:
  pgdata: 